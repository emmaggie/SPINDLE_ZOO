res_IP<-nbinomTest(cds_IP,"IP",'mock')
head(res_IP)
condition_IP
res_IP_w0<-nbinomTest(cds_IP_w0,"IP",'mock')
head(res_IP_w0)
plotMA(res)
plotMA(res_IP)
plotMA(res_IP_w0)
hist(res_IP$pval,breaks=100,col='skyblue',border='slateblue',main="")
hist(res_IP_w0$pval,breaks=100,col='skyblue',border='slateblue',main="")
?padj
?p.adj
?p.adjust
resSig_IP_w0<-res[res$padj<0.1]
resSig_IP_w0<-res[res$padj<0.1,]
resSig_IP_w0
resSig_IP_w0<-res[res_IP_w0$padj<0.1,]
resSig_IP_w0
head(resSig_IP_w0[order(resSig_IP_w0$pval,)])
head(resSig_IP_w0[order(resSig_IP_w0$pval),])
resSig_IP_w0<-res[res_IP_w0$padj<0.1,]
head(resSig_IP_w0[order(resSig_IP_w0$pval),])
resSig_IP_w0<-res_IP_w0[res_IP_w0$padj<0.1,]
head(resSig_IP_w0[order(resSig_IP_w0$pval),])
resSig_IP<-res_IP_w0[res_IP$padj<0.1,]
head(resSig_IP[order(resSig_IP$pval),])
resSig_IP<-res_IP[res_IP$padj<0.1,]
head(resSig_IP[order(resSig_IP$pval),])
new_complete_data_set<-round(complete_data_set[c(1,2,3,4,5,6)])
new_complete_data_set_w0<-new_complete_data_set-1
head(new_complete_data_set)
head(new_complete_data_set_w0)
new_complete_data_set2<-round(complete_data_set[c(1,2,5,6,3,4)])
ncu = counts( cds, normalized=TRUE )[ , conditions(cds)=="untreated" ]
plotMA(data.frame(baseMean = rowMeans(ncu),
+ log2FoldChange = log2( ncu[,2] / ncu[,1] )),
+ col = "black")
plotMA(data.frame(baseMean = rowMeans(ncu),
log2FoldChange = log2( ncu[,2] / ncu[,1] )),
col = "black")
plotMA(data.frame(baseMean = rowMeans(ncu),log2FoldChange = log2( ncu[,2] / ncu[,1] )),col = "black")
pData
?pData
pData(cds_IP)
fitInfo(cds)
head(fitInfo(cds))
fitInfo(cds)$perGeneDispEsts
?sign
source("http://bioconductor.org/biocLite.R")
biocLite("genefilter")
library(edgeR)
source("http://bioconductor.org/biocLite.R")
biocLite('edgeR')
source('~/.active-rstudio-document')
library(edgeR)
library(ggplot2)
#source("http://bioconductor.org/biocLite.R")
#biocLite('DESeq')
library(DESeq)
complete_data_set<-read.table(file="/Volumes/Magdalenas_Bigger_Boy/SEQ_DATA_2011/4_ANALYSIS_2012/5_LOCAL_ANALYSIS_Deep_SEQ_Data_Trop/Analysis/Introns/INTRONS_scatterplots/eff_counts_merged_all_xprs_files_introns_UCSC_10242014.txt", header=TRUE, stringsAsFactors = FALSE)
head(complete_data_set)
new_complete_data_set<-round(complete_data_set[c(1,2,3,4,5,6)])
head(new_complete_data_set)
names(new_complete_data_set)
#[1] "eff_counts_input1" "eff_counts_input2" "eff_counts_IP1"    "eff_counts_IP2"
deSeq_dataset<-newCountDataSet(new_complete_data_set[c(5,6,3,4)],c('cond1','cond1','cond2','cond2')) #mock 1, mock 2, IP 1, IP 2
deSeq_dataset<-estimateSizeFactors(deSeq_dataset)
deSeq_dataset<-estimateDispersions(deSeq_dataset,method='pooled',fitType='local')
de<-nbinomTest(deSeq_dataset,'cond1','cond2')
plot3<-ggplot()
plot3<-plot3+geom_point(data=de,aes(x=log10(de$baseMeanA),y=log10(de$baseMeanB)),colour=ifelse(de$pval < 0.05 & de$log2FoldChange>0,"red",ifelse(de$pval < 0.05 & de$log2FoldChange<0,'blue',"black")),alpha=0.5)
plot3+labs(title="Intron enrichment in IP fraction",x="log10(Mean effective read count -mock)",y='log10(Mean effective read count - IP)')
plot3mod<-ggplot()
plot3mod<-plot3mod+geom_point(data=de,aes(x=log10(de$baseMeanA),y=log10(de$baseMeanB),colour= de$pval < 0.05 & de$log2FoldChange>0,size = de$pval < 0.05 & de$log2FoldChange>0 ),alpha=0.5)
plot3mod<-plot3mod+scale_color_manual(name='significant',values=setNames(c('red','black'),c(TRUE,FALSE)))
plot3mod<-plot3mod+scale_size_manual(name='significant_2',values=setNames(c(4,2),c(TRUE,FALSE)))
plot3mod+labs(title="Intron enrichment in IP fraction",x="log10(Mean effective read count -mock)",y='log10(Mean effective read count - IP)')
ggsave("/Volumes/Magdalenas_Bigger_Boy/SEQ_DATA_2011/4_ANALYSIS_2012/5_LOCAL_ANALYSIS_Deep_SEQ_Data_Trop/Analysis/Introns/INTRONS_scatterplots/RH_2.png")
1.5*14
460/25
32000/80
3.2e6
3.2e6/2e5
(2e5)/15000
2e5*34
374/80
352/80
2000/2.5
1000/50
1000/10
2.5*342
855*0.2
200/100
200/20
200/800
1000/50
200/20
1.25*75
93.75*10/1000
390+380
7000+770
/16
7770/16
25/0.5
10/50
0.25*342
25/0.5
40/50
100/37
600/37
200/37
237/10
30/0.1
130/300
130*8
1040/300
0.9*800/24
800/30
10-0.08-2-0.4-0.5-0.2
10-0.08-2-5-0.5-0.2
9.25+9.25
9.25+9.25+192.20+2+37
350*0.37
350/37
350+3500
3850/16
3850+3850/16
2000/250
4091/8
25/0.5
460/50
4600/50
200/25
2000/8
50/55
5/50
55/50
50*1.4
50/12
2**5
2**6
64*10
0.08*9
0.2*9
6.82*9
2.2*9
20*1.1
30/5
30-0.4-6-0.2-0.4-20
0.5+0.2+5+2.2+2+0.08
50/12
20/4.1666
20-0.5-4.8-1
20-0.5-4-0.4-0.4-1
20-0.5-4-0.4-0.4-1
20-0.5-4.8-1
vvnv b zxcxzzxxcvbnxzcvbnmvbnerfgrtft5rfwq34eu7i8oy6htyujkm,./m,
30*0.
30*0.6
30*1.3
39-18
1e-12
1e-3
(1e-12)*0.0051
(1e-12)*0.0051*(1e-6)
(1e-12)*0.0051/(1e-6)
(1e-12)*0.0076/(1e-6)
300/8
1528/2001
473/2001
1528/2001/2
chisq.test(c(886,642,441,32),p=c(0.38,0.38,0.12,0.12))
library(ggplot2)
mtcars
head(mtcars)
unique(mtcars$vs)
unique(mtcars$am)
length(mtcars)
dim(mtcars)
names(mtcars)
names(mtcars[,1])
(mtcars[,1])
(mtcars[,1].name)
(name(mtcars[,1]))
?mean
?multiplot
# Multiple plot function
#
# ggplot objects can be passed in ..., or to plotlist (as a list of ggplot objects)
# - cols:   Number of columns in layout
# - layout: A matrix specifying the layout. If present, 'cols' is ignored.
#
# If the layout is something like matrix(c(1,2,3,3), nrow=2, byrow=TRUE),
# then plot 1 will go in the upper left, 2 will go in the upper right, and
# 3 will go all the way across the bottom.
#
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
require(grid)
# Make a list from the ... arguments and plotlist
plots <- c(list(...), plotlist)
numPlots = length(plots)
# If layout is NULL, then use 'cols' to determine layout
if (is.null(layout)) {
# Make the panel
# ncol: Number of columns of plots
# nrow: Number of rows needed, calculated from # of cols
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots==1) {
print(plots[[1]])
} else {
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
# Make each plot, in the correct location
for (i in 1:numPlots) {
# Get the i,j matrix positions of the regions that contain this subplot
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
?list
list(50)
list()
plot_list=list()
for (i in 1:length(dfo_no_CAT_NUM)){
#print(mean(dfo_no_CAT_NUM[,i],na.rm=TRUE))
[[i]]<-i
}
biocLite()
?biocLite
??biocLite
source("http://bioconductor.org/biocLite.R")
library(ggplot2)
5000/300
450/25
450-45
405/25
library(ggplot2)
#################################################################################################
#prepare data
#################################################################################################
setwd('/Volumes/Magdalena_NEW1/ZOO_DATA/Zoo Data/140924_keynote')
getwd()
dir()
list.files('../SEPTEMBER_2014/')
#mitotic_anaphase is the file of interest
meiotic<-read.csv('../SEPTEMBER_2014/meiotic_true.csv',stringsAsFactors=FALSE)
#this has to be narrowed down to
mitotic<-read.csv('../SEPTEMBER_2014/meiotic_false.csv',stringsAsFactors=FALSE)
#mitotic_anaphase<-read.csv('../SEPTEMBER_2014/mitotic_anaphase.csv')
#mitotic_anaphase$organism<-as.character(mitotic_anaphase$organism)
head(meiotic)
original<-read.csv('../SEPTEMBER_2014/original.csv',stringsAsFactors=FALSE)
################################################################################################
################################################################################################
#GET NUMERIC COLUMNS ONLY (MULTIPLE REGRESSION)
#REMOVE DUPLICATES
#GET METAPHASE SPINDLES ONLY
#FIX DATA.TYPES and FILTER ON THEM
################################################################################################
################################################################################################
names(meiotic)
for (col in names(meiotic)){
print(col)
print(class(meiotic[,col]))
}
meiotic_for_MR<-meiotic_for_MR[-c(1,2)]
meiotic_for_MR<-meiotic
names(meiotic_for_MR)
meiotic_for_MR$astere.to.pole_distance_AVG<-apply(meiotic_for_MR[,c(1,2)],1,mean,rm=TRUE)
#http://stackoverflow.com/questions/4605206/drop-columns-r-data-frame
names(meiotic_for_MR)
meiotic_for_MR<-meiotic_for_MR[-c(1,2)]
meiotic_for_MR$inner_aster_diameter_AVG<-apply(meiotic_for_MR[,c(13,14)],1,mean,na.rm=TRUE)
to_drop<-c('inner_aster_diameter_1_um',"inner_aster_diameter_2_um")
meiotic_for_MR<-meiotic_for_MR[,!names(meiotic_for_MR) %in% to_drop]
#to_drop %in% names(meiotic_for_MR)
meiotic_for_MR$polar_body_diameter_AVG<-apply(meiotic_for_MR[,c(27,28)],1,mean,na.rm=TRUE)
names(meiotic_for_MR)
meiotic_for_MR<-meiotic_for_MR[-c(27,28)]
names(meiotic_for_MR)
meiotic_for_MR$outer_aster_diameter_AVG<-apply(meiotic_for_MR[,c(23,24)],1,mean, na.rm=TRUE)
meiotic_for_MR<-meiotic_for_MR[-c(23,24)]
names(meiotic_for_MR)
meiotic_for_MR$cell_diameter_um
ggplot(data=meiotic_for_MR)+geom_point(aes(y=spindle_length_poles_um,x=log2(cell_diameter_um),colour=stage))
unique(meiotic_for_MR[(meiotic_for_MR$stage == 'm' | meiotic_for_MR$stage=='mI' | meiotic_for_MR$stage=='mII'),]$stage)
meiotic_for_MR_met<-meiotic_for_MR[(meiotic_for_MR$stage == 'm' | meiotic_for_MR$stage=='mI' | meiotic_for_MR$stage=='mII'),]
ggplot(data=meiotic_for_MR_met)+geom_point(aes(y=spindle_length_poles_um,x=log2(cell_diameter_um),colour=stage))
################################################################################################
#fix data types & filter on them: use: meiotic_for_MR_met
################################################################################################
for (col in names(meiotic_for_MR_met)){
if(class(meiotic_for_MR_met[,col])=='integer'){
print(col)
print(class(meiotic_for_MR_met[,col]))
}
} #not all _CATs are listed - fix it below
names(meiotic_for_MR_met)
class(meiotic_for_MR_met$stage)
### REMOVING 'character' VARIABLES
char_cols<-vector()
for (i in 1:length(names(meiotic_for_MR_met))){
if(class(meiotic_for_MR_met[,i])=='character'){
char_cols[i]<-names(meiotic_for_MR_met)[i]
#print(col)
#print(class(meiotic[,col]))
}
}
char_cols
char_cols<-char_cols[!is.na(char_cols)]
char_cols
!names(meiotic_for_MR_met) %in% char_cols
names(meiotic_for_MR_met[,!names(meiotic_for_MR_met) %in% char_cols])
meiotic_for_MR_met_num<-meiotic_for_MR_met[,!names(meiotic_for_MR_met) %in% char_cols]
###############################################
names(meiotic_for_MR_met_num)
grep('_CAT',names(meiotic_for_MR_met_num),value = TRUE)
CAT_cols<-names(meiotic_for_MR_met_num[,grep('_CAT',names(meiotic_for_MR_met_num),value = TRUE)])
CAT_cols
for(i in 1:length(CAT_cols)){
#print(CAT_cols[i])
#print(class(meiotic_for_MR_met_num[,CAT_cols[i]]))
meiotic_for_MR_met_num[,CAT_cols[i]]<-as.integer(meiotic_for_MR_met_num[,CAT_cols[i]])
}
for(i in 1:length(CAT_cols)){
print(class(meiotic_for_MR_met_num[,CAT_cols[i]]))
}
integer_cols<-vector() #this one does not really work
for (i in 1:length(names(meiotic_for_MR_met_num))){
if(class(meiotic_for_MR_met_num[,i])=='integer'){
integer_cols[i]<-names(meiotic_for_MR_met_num)[i]
}
}
names(meiotic_for_MR_met_num)
integer_cols #not metaphase_plate_aspect_ratio_um
integer_cols<-integer_cols[!is.na(integer_cols)]
##add a few that were not captured
integer_cols<-c(integer_cols,'chromosomes',"num_of_cells_NUM")
meiotic_for_MR_met_num<-meiotic_for_MR_met_num[!names(meiotic_for_MR_met_num) %in% integer_cols]
names(meiotic_for_MR_met_num)
for (col in names(meiotic_for_MR_met_num)){
#  print(col)
print(class(meiotic_for_MR_met_num[,col]))
}
head(meiotic_for_MR_met_num)
names(meiotic_for_MR_met_num)
dim(meiotic_for_MR_met_num)
ggplot(data=meiotic_for_MR_met_num)+geom_histogram(aes(x=spindle_length_poles_um))
ggplot(data=meiotic_for_MR_met_num)+geom_histogram(aes(x=spindle_length_poles_um),binwidth=1)
shapiro.test(meiotic_for_MR_met_num$spindle_length_poles_um) #p-value = 0.003256
qqnorm(meiotic_for_MR_met_num$spindle_length_poles_um)
qqline(meiotic_for_MR_met_num$spindle_length_poles_um)
ggplot(data=meiotic_for_MR_met_num)+geom_histogram(aes(x=log2(spindle_length_poles_um),y=..density..))#+geom_density(aes(spindle_length_poles_um),colour='red')
qqnorm(log(meiotic_for_MR_met_num$spindle_length_poles_um))
qqline(log(meiotic_for_MR_met_num$spindle_length_poles_um))
ggplot(data=meiotic_for_MR_met_num)+geom_histogram(aes(x=sqrt(spindle_length_poles_um),y=..density..))#+geom_density(aes(spindle_length_poles_um),colour='red')
shapiro.test(sqrt(meiotic_for_MR_met_num$spindle_length_poles_um)) #1.136e-06
qqnorm(sqrt(meiotic_for_MR_met_num$spindle_length_poles_um))
qqline(sqrt(meiotic_for_MR_met_num$spindle_length_poles_um))
?sum
?sd
skew<-function(x){
m3<-sum(x-mean(x),na.rm=TRUE)/length(x)
skew<-m3/(sqrt(sd^2))^3
return(skew)
}
skew(meiotic_for_MR_met_num$spindle_length_poles_um)
skew<-function(x){
m3<-sum(x-mean(x),na.rm=TRUE)/length(x)
skew<-m3/(sqrt(sd(x,na.rm=TRUE)^2))^3
return(skew)
}
skew(meiotic_for_MR_met_num$spindle_length_poles_um)
skew<-function(x){
m3<-sum((x-mean(x, na.rm=TRUE))^3,na.rm=TRUE)/length(x)
skew<-m3/(sqrt(sd(x,na.rm=TRUE)^2))^3
return(skew)
}
skew(meiotic_for_MR_met_num$spindle_length_poles_um)
skew<-function(x){
m3<-sum((x-mean(x,,na.rm=TRUE))^3/length(x)
skew<-m3/(sqrt(sd(x,na.rm=TRUE)^2))^3
return(skew)
}
skew(meiotic_for_MR_met_num$spindle_length_poles_um)
skew<-function(x){
m3<-sum((x-mean(x,,na.rm=TRUE))^3/length(x)
skew<-m3/(sqrt(sd(x,na.rm=TRUE)^2))^3
return(skew)
}
skew<-function(x){
m3<-sum((x-mean(x,,na.rm=TRUE))^3)/length(x)
skew<-m3/(sqrt(sd(x,na.rm=TRUE)^2))^3
return(skew)
}
skew(meiotic_for_MR_met_num$spindle_length_poles_um)
skew<-function(x){
m3<-sum((x-mean(x,na.rm=TRUE))^3)/length(x)
skew<-m3/(sqrt(sd(x,na.rm=TRUE)^2))^3
return(skew)
}
skew(meiotic_for_MR_met_num$spindle_length_poles_um)
meiotic_for_MR_met_num$spindle_length_poles_um
skew<-function(x){
m3<-sum((x-mean(x,na.rm=TRUE))^3)/length(x)
skew<-m3/(sqrt(var(x,na.rm=TRUE)))^3
return(skew)
}
skew(meiotic_for_MR_met_num$spindle_length_poles_um)
skew(seq(1,10,2))
?var
skew<-function(x){
m3<-sum((x-mean(x,na.rm=TRUE))^3)/length(x)
s3<-sqrt(var(x,na.rm=TRUE))^3
skew<-m3/s3
return(skew)
}
skew(meiotic_for_MR_met_num$spindle_length_poles_um)
sum((meiotic_for_MR_met_num$spindle_length_poles_um-mean(meiotic_for_MR_met_num$spindle_length_poles_um,na.rm=TRUE))^3)/length(meiotic_for_MR_met_num$spindle_length_poles_um)
mean(meiotic_for_MR_met_num$spindle_length_poles_um,na.rm=TRUE)
meiotic_for_MR_met_num$spindle_length_poles_um-mean(meiotic_for_MR_met_num$spindle_length_poles_um,na.rm=TRUE)
skew<-function(x){
m3<-sum((x-mean(x,na.rm=TRUE),na.rm=TRUE)^3)/length(x)
s3<-sqrt(var(x,na.rm=TRUE))^3
skew<-m3/s3
return(skew)
}
skew<-function(x){
m3<-sum((x-mean(x,na.rm=TRUE))^3,na.rm=TRUE)/length(x)
s3<-sqrt(var(x,na.rm=TRUE))^3
skew<-m3/s3
return(skew)
}
skew(meiotic_for_MR_met_num$spindle_length_poles_um)
skew<-function(x){
m3<-sum((x-mean(x,na.rm=TRUE))^3,na.rm=TRUE)/length(x)
s3<-sqrt(var(x,na.rm=TRUE))^3
skew<-m3/s3
se_gamma<-skew(meiotic_for_MR_met_num$spindle_length_poles_um)/sqrt(6/length(x))
return(skew,se_gamma)
}
skew(meiotic_for_MR_met_num$spindle_length_poles_um)
skew<-function(x){
m3<-sum((x-mean(x,na.rm=TRUE))^3,na.rm=TRUE)/length(x)
s3<-sqrt(var(x,na.rm=TRUE))^3
skew<-m3/s3
se_gamma<-sqrt(6/length(x))
return(skew,se_gamma)
}
skew(meiotic_for_MR_met_num$spindle_length_poles_um)
skew<-function(x){
m3<-sum((x-mean(x,na.rm=TRUE))^3,na.rm=TRUE)/length(x)
s3<-sqrt(var(x,na.rm=TRUE))^3
skew<-m3/s3
se_gamma<-sqrt(6/length(x))
return(list(skew,se_gamma))
}
skew(meiotic_for_MR_met_num$spindle_length_poles_um)
skew<-function(x){
m3<-sum((x-mean(x,na.rm=TRUE))^3,na.rm=TRUE)/length(x)
s3<-sqrt(var(x,na.rm=TRUE))^3
skew<-m3/s3
se_gamma<-sqrt(6/length(x))
return(list(skew=skew,se_gamma=se_gamma))
}
skew(meiotic_for_MR_met_num$spindle_length_poles_um)
?pt
skew<-function(x){
m3<-sum((x-mean(x,na.rm=TRUE))^3,na.rm=TRUE)/length(x)
s3<-sqrt(var(x,na.rm=TRUE))^3
skew<-m3/s3
se_gamma<-sqrt(6/length(x))
t=skew/se_gamma
prob=1-pt(t,length(x)-1)
return(list(skew=skew,se_gamma=se_gamma))
}
skew(meiotic_for_MR_met_num$spindle_length_poles_um)
skew<-function(x){
m3<-sum((x-mean(x,na.rm=TRUE))^3,na.rm=TRUE)/length(x)
s3<-sqrt(var(x,na.rm=TRUE))^3
skew<-m3/s3
se_gamma<-sqrt(6/length(x))
t=skew/se_gamma
prob=1-pt(t,length(x)-1)
return(list(skew=skew,se_gamma=se_gamma,prob=prob))
}
skew(meiotic_for_MR_met_num$spindle_length_poles_um)
skew<-function(x){
m3<-sum((x-mean(x,na.rm=TRUE))^3,na.rm=TRUE)/length(x)
s3<-sqrt(var(x,na.rm=TRUE))^3
skew<-m3/s3
se_gamma<-sqrt(6/length(x))
t=skew/se_gamma
prob=1-pt(t,length(x)-2)
return(list(skew=skew,se_gamma=se_gamma,prob=prob))
}
skew(meiotic_for_MR_met_num$spindle_length_poles_um)
skew<-function(x){
m3<-sum((x-mean(x,na.rm=TRUE))^3,na.rm=TRUE)/length(x)
s3<-sqrt(var(x,na.rm=TRUE))^3
skew<-m3/s3
se_gamma<-sqrt(6/length(x))
t=skew/se_gamma
prob=pt(t,length(x)-2)
return(list(skew=skew,se_gamma=se_gamma,prob=prob))
}
skew(meiotic_for_MR_met_num$spindle_length_poles_um)
